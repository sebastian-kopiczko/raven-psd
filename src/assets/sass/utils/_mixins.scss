@import './variables';
@mixin breakpoint($breakpoint, $direction: $media-direction) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (#{$direction}-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  } @else if unitless($breakpoint) {
    $breakpoint: $breakpoint + 0px;
    @media (#{$direction}-width: $breakpoint) {
      @content;
    }
  }
}

@mixin icons($map, $prefix: '--', $width: 1em, $height: 1em, $color: $white) {
  @each $icon in $map {
    &#{$prefix}#{$icon} {
      &:after {
        content: '';
        position: absolute;
        display: block;
        height: $height;
        width: $width;
        top: calc(50% - (#{$height} / 2));
        left: calc(50% - (#{$width} / 2));
        background-color: $color;
        z-index: 2;
        -webkit-mask-image: url('../images/svg/icon-'+$icon+'.svg');
        mask: {
          image: url('../images/svg/icon-'+$icon+'.svg');
          size: $width;
          repeat: no-repeat;
        }
      }
    }
  }
}

// TODO pseudo elements mixin
// >>> refactor image-hover-background mixin <<<
@mixin image-hover-background($color, $opacity: 0) {
  content: '';
  position: absolute;
  display: block;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: $color;
  z-index: 1;
  opacity: $opacity;
}
